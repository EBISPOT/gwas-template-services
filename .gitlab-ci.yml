image: docker:latest

stages:
  - build
  - deploy

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_IMAGE: ebispot/gwas-deposition-template

# always build an image tagged with the commit SHA from master
build:
  stage: build
  script:
   - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
   - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
   - docker pull $CI_REGISTRY_IMAGE:latest
   - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
#    - docker run $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA pytest
   - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  only:
   - master
   - template-477-Sandbox-Migration

# if a tag is created create an images with the tag and a latest
build_release:
  variables:
    GIT_STRATEGY: none
  stage: build
  script:
   - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
   - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
   - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
   - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
   - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
   - docker push $CI_REGISTRY_IMAGE:latest
   - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
   - tags


deploy_sandbox:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to staging server"
    - mkdir -p /root/.kube
    - echo ${PLIVE_KUBECONFIG}  | base64 -d > /root/.kube/config
    - helm init --stable-repo-url https://charts.helm.sh/stable
    - helm delete --purge gwas-template-service-dev || true
    - helm install --name gwas-template-service-dev --set image.env.basePath=/gwas/deposition/template,service.name=gwas-template-service-dev,service.type=NodePort,service.port=8080,k8Namespace=gwas-dev,ingress.name=template-ingress-dev,image.volume.claimName=gwas-dev-depo-logs,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA ./k8chart/ --wait
  environment:
    name: sandbox
  only:
    - master

deploy_fallback:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to production fallback server"
    - mkdir -p /root/.kube
    - echo ${PFALLBACK_KUBECONFIG} | base64 -d > /root/.kube/config
    - helm init --stable-repo-url https://charts.helm.sh/stable
    - helm delete --purge gwas-template-service || true
    - helm install --name gwas-template-service --set image.env.basePath=/gwas/deposition/template,service.type=NodePort,k8Namespace=gwas,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA ./k8chart/ --wait
  environment:
    name: fallback
  when: manual
  only:
    - tags

deploy_prod:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to production server"
    - mkdir -p /root/.kube
    - echo ${PLIVE_KUBECONFIG} | base64 -d > /root/.kube/config
    - helm init --stable-repo-url https://charts.helm.sh/stable
    - helm delete --purge gwas-template-service || true
    - helm install --name gwas-template-service --set image.env.basePath=/gwas/deposition/template,service.type=NodePort,k8Namespace=gwas,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA ./k8chart/ --wait
  environment:
    name: production
    url: http://www.ebi.ac.uk/gwas/submission/template
  when: manual
  only:
    - tags
